{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from \"react\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nexport default function LoginScreen() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  return React.createElement(KeyboardAvoidingView, {\n    style: styles.container,\n    behavior: \"padding\"\n  }, React.createElement(View, {\n    style: styles.inputContainer\n  }, React.createElement(TextInput, {\n    placeholder: \"Email\",\n    value: email,\n    onChangeText: function onChangeText(text) {\n      return setEmail(text);\n    },\n    style: styles.input\n  }), React.createElement(TextInput, {\n    placeholder: \"Password\",\n    value: password,\n    onChangeText: function onChangeText(text) {\n      return setPassword(text);\n    },\n    style: styles.input,\n    secureTextEntry: true\n  })), React.createElement(View, {\n    style: styles.buttonContainer\n  }, React.createElement(TouchableOpacity, {\n    style: styles.button\n  }, React.createElement(Text, {\n    style: styles.buttonText\n  }, \"Login\")), React.createElement(TouchableOpacity, {\n    style: [styles.button, styles.buttonOutline]\n  }, React.createElement(Text, {\n    style: styles.buttonOutlineText\n  }, \"Register\"))));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  inputContainer: {\n    width: \"80%\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    elevation: 5\n  },\n  input: {\n    backgroundColor: \"white\",\n    paddingHorizontal: 15,\n    paddingVertical: 10,\n    borderRadius: 10,\n    marginTop: 5\n  },\n  buttonContainer: {\n    width: \"60%\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 40\n  },\n  button: {\n    backgroundColor: \"#0782F9\",\n    width: \"100%\",\n    padding: 15,\n    borderRadius: 10,\n    alignItems: \"center\"\n  },\n  buttonOutline: {\n    backgroundColor: \"white\",\n    marginTop: 5,\n    borderColor: \"#0782F9\",\n    borderWidth: 2\n  },\n  buttonText: {\n    color: \"white\",\n    fontWeight: \"700\",\n    fontSize: 16\n  },\n  buttonOutlineText: {\n    color: \"#0782F9\",\n    fontWeight: \"700\",\n    fontSize: 16\n  }\n});","map":{"version":3,"sources":["/Users/bootcamp/Desktop/ripe/components/LoginScreen.js"],"names":["React","useEffect","useState","LoginScreen","email","setEmail","password","setPassword","styles","container","inputContainer","text","input","buttonContainer","button","buttonText","buttonOutline","buttonOutlineText","StyleSheet","create","flex","justifyContent","alignItems","width","shadowColor","shadowOffset","height","shadowOpacity","shadowRadius","elevation","backgroundColor","paddingHorizontal","paddingVertical","borderRadius","marginTop","padding","borderColor","borderWidth","color","fontWeight","fontSize"],"mappings":"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","sourcesContent":["// import { useNavigation } from '@react-navigation/core'\nimport React, { useEffect, useState } from \"react\";\nimport {\n  KeyboardAvoidingView,\n  StyleSheet,\n  Text,\n  TextInput,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\n// import { auth } from '../firebase'\n\nexport default function LoginScreen() {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  // useEffect(() => {\n  //   const unsubscribe = auth.onAuthStateChanged(user => {\n  //     if (user) {\n  //       navigation.replace(\"Home\")\n  //     }\n  //   })\n\n  //   return unsubscribe\n  // }, [])\n\n  // const handleSignUp = () => {\n  //   auth\n  //     .createUserWithEmailAndPassword(email, password)\n  //     .then(userCredentials => {\n  //       const user = userCredentials.user;\n  //       console.log('Registered with:', user.email);\n  //     })\n  //     .catch(error => alert(error.message))\n  // }\n\n  // const handleLogin = () => {\n  //   auth\n  //     .signInWithEmailAndPassword(email, password)\n  //     .then(userCredentials => {\n  //       const user = userCredentials.user;\n  //       console.log('Logged in with:', user.email);\n  //     })\n  //     .catch(error => alert(error.message))\n  // }\n\n  return (\n    <KeyboardAvoidingView style={styles.container} behavior='padding'>\n      <View style={styles.inputContainer}>\n        <TextInput\n          placeholder='Email'\n          value={email}\n          onChangeText={(text) => setEmail(text)}\n          style={styles.input}\n        />\n        <TextInput\n          placeholder='Password'\n          value={password}\n          onChangeText={(text) => setPassword(text)}\n          style={styles.input}\n          secureTextEntry\n        />\n      </View>\n\n      <View style={styles.buttonContainer}>\n        <TouchableOpacity\n          // onPress={handleLogin}\n          style={styles.button}\n        >\n          <Text style={styles.buttonText}>Login</Text>\n        </TouchableOpacity>\n        <TouchableOpacity\n          // onPress={handleSignUp}\n          style={[styles.button, styles.buttonOutline]}\n        >\n          <Text style={styles.buttonOutlineText}>Register</Text>\n        </TouchableOpacity>\n      </View>\n    </KeyboardAvoidingView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  inputContainer: {\n    width: \"80%\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n\n    elevation: 5,\n  },\n  input: {\n    backgroundColor: \"white\",\n    paddingHorizontal: 15,\n    paddingVertical: 10,\n    borderRadius: 10,\n    marginTop: 5,\n  },\n  buttonContainer: {\n    width: \"60%\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 40,\n  },\n  button: {\n    backgroundColor: \"#0782F9\",\n    width: \"100%\",\n    padding: 15,\n    borderRadius: 10,\n    alignItems: \"center\",\n  },\n  buttonOutline: {\n    backgroundColor: \"white\",\n    marginTop: 5,\n    borderColor: \"#0782F9\",\n    borderWidth: 2,\n  },\n  buttonText: {\n    color: \"white\",\n    fontWeight: \"700\",\n    fontSize: 16,\n  },\n  buttonOutlineText: {\n    color: \"#0782F9\",\n    fontWeight: \"700\",\n    fontSize: 16,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}