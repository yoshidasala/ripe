{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { StatusBar } from \"expo-status-bar\";\nimport React, { useEffect, useState } from \"react\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { collection, getDocs, doc, setDoc } from \"firebase/firestore/lite\";\nimport { Location, Persmissions } from 'expo';\nimport BottomTabNav from \"./BottomTabNav\";\nimport { auth } from \"../firebase\";\nimport { db } from \"../firebase\";\nimport { signOut } from \"firebase/auth\";\nimport { Component } from \"react\";\nexport default function HomeScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      ready = _useState2[0],\n      setReady = _useState2[1];\n\n  var _useState3 = useState({\n    lat: null,\n    long: null\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      where = _useState4[0],\n      setWhere = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      error = _useState6[0],\n      setError = _useState6[1];\n\n  var handleSignOut = function handleSignOut() {\n    signOut(auth).then(function () {\n      navigation.navigate(\"Landing\");\n    }).catch(function (error) {\n      return alert(error.message);\n    });\n  };\n\n  var getLocation = function getLocation() {\n    var _await$Permissions$as, status;\n\n    return _regeneratorRuntime.async(function getLocation$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.Location));\n\n          case 2:\n            _await$Permissions$as = _context.sent;\n            status = _await$Permissions$as.status;\n\n            if (status !== \"granted\") {\n              console.log(\"PERSMISSION NOT GRANTED\");\n            }\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(View, {\n    style: styles.container\n  }, ready ? React.createElement(Text, {\n    style: styles.title\n  }, \"Lat:\", where.lat, \" Long:\", where.long) : \"location cannot be found\", error ? error : \"\", React.createElement(Text, {\n    style: styles.title\n  }, \"Home\"), React.createElement(View, {\n    style: styles.buttonContainer\n  }, React.createElement(TouchableOpacity, {\n    onPress: handleSignOut,\n    style: styles.button\n  }, React.createElement(Text, {\n    style: styles.buttonText\n  }, \"LOGOUT\")), React.createElement(TouchableOpacity, {\n    style: styles.button\n  }, React.createElement(Text, {\n    style: styles.buttonText\n  }, \"GET DATA\"))), React.createElement(StatusBar, {\n    style: \"auto\"\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#FCFBFC\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  button: {\n    fontcolor: \"#949494\",\n    width: \"40%\",\n    padding: 15,\n    borderRadius: 10,\n    alignItems: \"center\",\n    shadow: \"20px\"\n  },\n  title: {\n    alignItems: \"center\",\n    textDecorationColor: \"red\",\n    textDecorationLine: \"line-through\"\n  },\n  buttonContainer: {\n    width: \"60%\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 40\n  },\n  buttonText: {\n    color: \"#9A9A9A\",\n    fontSize: 10\n  }\n});","map":{"version":3,"sources":["/Users/bootcamp/Desktop/ripe/components/HomeScreen.js"],"names":["NavigationContainer","StatusBar","React","useEffect","useState","collection","getDocs","doc","setDoc","Location","Persmissions","BottomTabNav","auth","db","signOut","Component","HomeScreen","navigation","ready","setReady","lat","long","where","setWhere","error","setError","handleSignOut","then","navigate","catch","alert","message","getLocation","Permissions","askAsync","status","console","log","styles","container","title","buttonContainer","button","buttonText","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","fontcolor","width","padding","borderRadius","shadow","textDecorationColor","textDecorationLine","marginTop","color","fontSize"],"mappings":"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","sourcesContent":["import { NavigationContainer } from \"@react-navigation/native\";\nimport { StatusBar } from \"expo-status-bar\";\nimport React, { useEffect, useState } from \"react\";\nimport { Button, StyleSheet, Text, View, TouchableOpacity } from \"react-native\";\nimport { collection, getDocs, doc, setDoc } from \"firebase/firestore/lite\";\nimport {Location,Persmissions} from 'expo'\nimport BottomTabNav from \"./BottomTabNav\";\nimport { auth } from \"../firebase\";\nimport { db } from \"../firebase\";\nimport { signOut } from \"firebase/auth\";\nimport { Component } from \"react\";\n\nexport default function HomeScreen({ navigation }) {\n  const [ready, setReady] = useState(false);\n  const [where, setWhere] = useState({ lat: null, long: null });\n  const [error, setError] = useState(null);\n\n\n\n  const handleSignOut = () => {\n    signOut(auth)\n      .then(() => {\n        navigation.navigate(\"Landing\");\n      })\n\n      .catch((error) => alert(error.message));\n  };\n\n  const getLocation = async () => {\n    const { status } = await Permissions.askAsync(Permissions.Location);\n    if (status !== \"granted\") {\n      console.log(\"PERSMISSION NOT GRANTED\");\n\n      \n}\n\n  };\n\n  return (\n    <View style={styles.container}>\n      {ready ? (\n        <Text style={styles.title}>\n          Lat:{where.lat} Long:{where.long}\n        </Text>\n      ) : (\n        \"location cannot be found\"\n      )}\n      {error ? error : \"\"}\n      <Text style={styles.title}>Home</Text>\n      <View style={styles.buttonContainer}>\n        <TouchableOpacity onPress={handleSignOut} style={styles.button}>\n          <Text style={styles.buttonText}>LOGOUT</Text>\n        </TouchableOpacity>\n        <TouchableOpacity style={styles.button}>\n          <Text style={styles.buttonText}>GET DATA</Text>\n        </TouchableOpacity>\n        {/* <BottomTabNav /> */}\n      </View>\n      <StatusBar style='auto' />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#FCFBFC\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  button: {\n    fontcolor: \"#949494\",\n    width: \"40%\",\n    padding: 15,\n    borderRadius: 10,\n    alignItems: \"center\",\n    shadow: \"20px\",\n  },\n  title: {\n    alignItems: \"center\",\n    textDecorationColor: \"red\",\n    textDecorationLine: \"line-through\",\n  },\n  buttonContainer: {\n    width: \"60%\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 40,\n  },\n\n  buttonText: {\n    color: \"#9A9A9A\",\n\n    fontSize: 10,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}