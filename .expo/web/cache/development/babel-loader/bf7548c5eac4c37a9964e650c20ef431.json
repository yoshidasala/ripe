{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { StatusBar } from \"expo-status-bar\";\nimport React, { useEffect, useState } from \"react\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport { getFirestore, collection, getDocs } from \"firebase/firestore/lite\";\nimport BottomTabNav from \"./BottomTabNav\";\nimport summer from \"../assets/summer.png\";\nimport fall from \"../assets/fall.png\";\nimport winter from \"../assets/winter.png\";\nimport spring from \"../assets/spring.png\";\nimport { FlatGrid } from \"react-native-super-grid\";\nexport default function SpringScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState([{\n    name: \"potato\",\n    code: \"#1abc9c\",\n    img: \"../assets/summer.png\"\n  }, {\n    name: \"bamboo shoots\",\n    code: \"#2ecc71\",\n    img: \"../assets/summer.png\"\n  }, {\n    name: \"citrus\",\n    code: \"#3498db\",\n    img: \"../assets/summer.png\"\n  }, {\n    name: \"soramame\",\n    code: \"#9b59b6\",\n    img: \"../assets/summer.png\"\n  }, {\n    name: \"edmame\",\n    code: \"#34495e\",\n    img: \"../assets/summer.png\"\n  }, {\n    name: \"asparagus\",\n    code: \"#16a085\",\n    img: \"../assets/summer.png\"\n  }]),\n      _useState2 = _slicedToArray(_useState, 2),\n      items = _useState2[0],\n      setItems = _useState2[1];\n\n  return React.createElement(View, {\n    style: styles.container\n  }, React.createElement(Text, {\n    style: styles.title\n  }, \"Spring\"), React.createElement(Image, {\n    source: summer,\n    style: {\n      width: 20,\n      height: 20,\n      margin: 10\n    }\n  }), React.createElement(FlatGrid, {\n    itemDimension: 130,\n    data: items,\n    style: styles.gridView,\n    staticDimension: 300,\n    fixed: true,\n    spacing: 10,\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(View, {\n        style: [styles.itemContainer, {\n          backgroundColor: \"#ecf0f1\"\n        }]\n      }, React.createElement(Text, {\n        style: styles.itemName\n      }, item.name), React.createElement(Image, {\n        source: item.img,\n        style: {\n          width: 20,\n          height: 20,\n          margin: 10\n        }\n      }));\n    }\n  }), React.createElement(View, {\n    style: styles.nav\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.navigate(\"Home\");\n    },\n    style: styles.button\n  }, React.createElement(Text, {\n    style: styles.buttonText\n  }, \" HOME\"), React.createElement(Image, {\n    source: summer,\n    style: {\n      width: 20,\n      height: 20,\n      margin: 10\n    }\n  })), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.navigate(\"Home\");\n    },\n    style: styles.button\n  }, React.createElement(Text, {\n    style: styles.buttonText\n  }, \" WINTER\"), React.createElement(Image, {\n    source: winter,\n    style: {\n      width: 20,\n      height: 20,\n      margin: 10\n    }\n  })), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.navigate(\"\");\n    },\n    style: styles.button\n  }, React.createElement(Text, {\n    style: styles.buttonText\n  }, \" FALL\"), React.createElement(Image, {\n    source: fall,\n    style: {\n      width: 20,\n      height: 20,\n      margin: 10\n    }\n  })), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.navigate(\"Home\");\n    },\n    style: styles.button\n  }, React.createElement(Text, {\n    style: styles.buttonText\n  }, \" SUMMER\"), React.createElement(Image, {\n    source: summer,\n    style: {\n      width: 20,\n      height: 20,\n      margin: 10\n    }\n  }))), React.createElement(StatusBar, {\n    style: \"auto\"\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#FCFBFC\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  button: {\n    color: \"#949494\",\n    width: \"40%\",\n    padding: 15,\n    borderRadius: 10,\n    alignItems: \"center\",\n    shadow: \"20px\"\n  },\n  title: {\n    marginTop: 100,\n    alignItems: \"center\",\n    textDecorationColor: \"red\",\n    textDecorationLine: \"line-through\"\n  },\n  gridView: {\n    marginTop: 10,\n    flex: 1\n  },\n  itemContainer: {\n    justifyContent: \"flex-end\",\n    borderRadius: 5,\n    padding: 20,\n    height: 100,\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    fontSize: 10,\n    elevation: 5\n  },\n  itemName: {\n    fontSize: 14,\n    color: \"#9A9A9A\",\n    fontWeight: \"100\",\n    textAlign: \"center\"\n  },\n  itemCode: {\n    fontWeight: \"600\",\n    fontSize: 12,\n    color: \"#fff\"\n  },\n  nav: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-evenly\"\n  },\n  buttonText: {\n    color: \"#9A9A9A\",\n    fontSize: 10\n  }\n});","map":{"version":3,"sources":["/Users/bootcamp/Desktop/ripe/components/SpringScreen.js"],"names":["NavigationContainer","StatusBar","React","useEffect","useState","getFirestore","collection","getDocs","BottomTabNav","summer","fall","winter","spring","FlatGrid","SpringScreen","navigation","name","code","img","items","setItems","styles","container","title","width","height","margin","gridView","item","itemContainer","backgroundColor","itemName","nav","navigate","button","buttonText","StyleSheet","create","flex","alignItems","justifyContent","color","padding","borderRadius","shadow","marginTop","textDecorationColor","textDecorationLine","shadowColor","shadowOffset","shadowOpacity","shadowRadius","fontSize","elevation","fontWeight","textAlign","itemCode","display","flexDirection"],"mappings":"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","sourcesContent":["import { NavigationContainer } from \"@react-navigation/native\";\nimport { StatusBar } from \"expo-status-bar\";\nimport React, { useEffect, useState } from \"react\";\nimport {\n  Button,\n  StyleSheet,\n  Text,\n  View,\n  TouchableOpacity,\n  Image,\n  Dimensions,\n  TouchableHighlight,\n} from \"react-native\";\nimport { getFirestore, collection, getDocs } from \"firebase/firestore/lite\";\nimport BottomTabNav from \"./BottomTabNav\";\nimport summer from \"../assets/summer.png\";\nimport fall from \"../assets/fall.png\";\nimport winter from \"../assets/winter.png\";\nimport spring from \"../assets/spring.png\";\nimport { FlatGrid } from \"react-native-super-grid\";\n\nexport default function SpringScreen({ navigation }) {\n  const [items, setItems] = useState([\n    { name: \"potato\", code: \"#1abc9c\", img: \"../assets/summer.png\" },\n    { name: \"bamboo shoots\", code: \"#2ecc71\", img: \"../assets/summer.png\" },\n    { name: \"citrus\", code: \"#3498db\", img: \"../assets/summer.png\" },\n    { name: \"soramame\", code: \"#9b59b6\", img: \"../assets/summer.png\" },\n    { name: \"edmame\", code: \"#34495e\", img: \"../assets/summer.png\" },\n    { name: \"asparagus\", code: \"#16a085\", img: \"../assets/summer.png\" },\n  ]);\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>Spring</Text>\n\n      <Image source={summer} style={{ width: 20, height: 20, margin: 10 }} />\n      <FlatGrid\n        itemDimension={130}\n        data={items}\n        style={styles.gridView}\n        staticDimension={300}\n        fixed\n        spacing={10}\n        renderItem={({ item }) => (\n          <View style={[styles.itemContainer, { backgroundColor: \"#ecf0f1\" }]}>\n            <Text style={styles.itemName}>{item.name}</Text>\n            <Image\n              source={item.img}\n              style={{ width: 20, height: 20, margin: 10 }}\n            />\n          </View>\n        )}\n      />\n      <View style={styles.nav}>\n        <TouchableOpacity\n          onPress={() => navigation.navigate(\"Home\")}\n          style={styles.button}\n        >\n          <Text style={styles.buttonText}> HOME</Text>\n\n          <Image\n            source={summer}\n            style={{ width: 20, height: 20, margin: 10 }}\n          />\n        </TouchableOpacity>\n        <TouchableOpacity\n          onPress={() => navigation.navigate(\"Home\")}\n          style={styles.button}\n        >\n          <Text style={styles.buttonText}> WINTER</Text>\n\n          <Image\n            source={winter}\n            style={{ width: 20, height: 20, margin: 10 }}\n          />\n        </TouchableOpacity>\n        <TouchableOpacity\n          onPress={() => navigation.navigate(\"\")}\n          style={styles.button}\n        >\n          <Text style={styles.buttonText}> FALL</Text>\n\n          <Image source={fall} style={{ width: 20, height: 20, margin: 10 }} />\n        </TouchableOpacity>\n        <TouchableOpacity\n          onPress={() => navigation.navigate(\"Home\")}\n          style={styles.button}\n        >\n          <Text style={styles.buttonText}> SUMMER</Text>\n\n          <Image\n            source={summer}\n            style={{ width: 20, height: 20, margin: 10 }}\n          />\n        </TouchableOpacity>\n      </View>\n      <StatusBar style='auto' />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#FCFBFC\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  button: {\n    color: \"#949494\",\n    width: \"40%\",\n    padding: 15,\n    borderRadius: 10,\n    alignItems: \"center\",\n    shadow: \"20px\",\n  },\n  title: {\n    marginTop: 100,\n    alignItems: \"center\",\n    textDecorationColor: \"red\",\n    textDecorationLine: \"line-through\",\n  },\n  gridView: {\n    marginTop: 10,\n    flex: 1,\n  },\n  itemContainer: {\n    justifyContent: \"flex-end\",\n    borderRadius: 5,\n    padding: 20,\n    height: 100,\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    fontSize: 10,\n    elevation: 5,\n  },\n  itemName: {\n    fontSize: 14,\n    color: \"#9A9A9A\",\n    fontWeight: \"100\",\n    textAlign: \"center\",\n  },\n  itemCode: {\n    fontWeight: \"600\",\n    fontSize: 12,\n    color: \"#fff\",\n  },\n  nav: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-evenly\",\n  },\n  buttonText: {\n    color: \"#9A9A9A\",\n\n    fontSize: 10,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}