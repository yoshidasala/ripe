{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { StatusBar } from \"expo-status-bar\";\nimport React, { useEffect, useState } from \"react\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport { getFirestore, collection, getDocs } from \"firebase/firestore/lite\";\nimport BottomTabNav from \"./BottomTabNav\";\nimport summer from \"../assets/summer.png\";\nimport fall from \"../assets/fall.png\";\nimport winter from \"../assets/winter.png\";\nimport spring from \"../assets/spring.png\";\nimport { FlatGrid } from \"react-native-super-grid\";\nexport default function WinterScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState([{\n    name: \"daikonradish\",\n    code: \"#1abc9c\",\n    color: \"#E1E7D0\"\n  }, {\n    name: \"strawberry\",\n    code: \"#2ecc71\",\n    color: \"#FF9293\"\n  }, {\n    name: \"apple\",\n    code: \"#3498db\",\n    color: \"#ED6665\"\n  }, {\n    name: \"renkon\",\n    code: \"#9b59b6\",\n    color: \"#5A4D41\"\n  }, {\n    name: \"cabbage\",\n    code: \"#34495e\",\n    color: \"#EAED\"\n  }, {\n    name: \"mikan\",\n    code: \"#16a085\",\n    color: \"#ED6665\"\n  }]),\n      _useState2 = _slicedToArray(_useState, 2),\n      items = _useState2[0],\n      setItems = _useState2[1];\n\n  return React.createElement(View, {\n    style: styles.container\n  }, React.createElement(Text, {\n    style: styles.title\n  }, \"Winter\"), React.createElement(Image, {\n    source: summer,\n    style: {\n      width: 20,\n      height: 20,\n      margin: 10\n    }\n  }), React.createElement(FlatGrid, {\n    itemDimension: 130,\n    data: items,\n    style: styles.gridView,\n    staticDimension: 300,\n    fixed: true,\n    spacing: 10,\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(View, {\n        style: [styles.itemContainer, {\n          backgroundColor: \"#ecf0f1\"\n        }]\n      }, React.createElement(Text, {\n        style: styles.itemName\n      }, item.name), React.createElement(View, {\n        style: {\n          alignSelf: \"center\",\n          width: 20,\n          height: 20,\n          borderRadius: 100 / 2,\n          backgroundColor: \"\" + item.color\n        }\n      }));\n    }\n  }), React.createElement(View, {\n    style: styles.nav\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.navigate(\"Home\");\n    },\n    style: styles.button\n  }, React.createElement(Text, {\n    style: styles.buttonText\n  }, \" HOME\"), React.createElement(Image, {\n    source: summer,\n    style: {\n      width: 20,\n      height: 20,\n      margin: 10\n    }\n  })), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.navigate(\"Fall\");\n    },\n    style: styles.button\n  }, React.createElement(Text, {\n    style: styles.buttonText\n  }, \" FALL\"), React.createElement(Image, {\n    source: winter,\n    style: {\n      width: 20,\n      height: 20,\n      margin: 10\n    }\n  })), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.navigate(\"Summer\");\n    },\n    style: styles.button\n  }, React.createElement(Text, {\n    style: styles.buttonText\n  }, \" SUMMER\"), React.createElement(Image, {\n    source: fall,\n    style: {\n      width: 20,\n      height: 20,\n      margin: 10\n    }\n  })), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.navigate(\"Spring\");\n    },\n    style: styles.button\n  }, React.createElement(Text, {\n    style: styles.buttonText\n  }, \" SPRING\"), React.createElement(Image, {\n    source: spring,\n    style: {\n      width: 20,\n      height: 20,\n      margin: 10\n    }\n  }))), React.createElement(StatusBar, {\n    style: \"auto\"\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#FCFBFC\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  button: {\n    color: \"#949494\",\n    width: \"40%\",\n    padding: 15,\n    borderRadius: 10,\n    alignItems: \"center\",\n    shadow: \"20px\"\n  },\n  title: {\n    marginTop: 100,\n    alignItems: \"center\",\n    textDecorationColor: \"red\",\n    textDecorationLine: \"line-through\"\n  },\n  gridView: {\n    marginTop: 10,\n    flex: 1\n  },\n  itemContainer: {\n    justifyContent: \"flex-end\",\n    borderRadius: 5,\n    padding: 20,\n    height: 100,\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    fontSize: 10,\n    elevation: 5\n  },\n  buttonText: {\n    color: \"#9A9A9A\",\n    fontSize: 10\n  },\n  itemName: {\n    fontSize: 14,\n    color: \"#9A9A9A\",\n    fontWeight: \"100\",\n    textAlign: \"center\"\n  },\n  itemCode: {\n    fontWeight: \"600\",\n    fontSize: 12,\n    color: \"#fff\"\n  },\n  nav: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-evenly\"\n  }\n});","map":{"version":3,"sources":["/Users/bootcamp/Desktop/ripe/components/WinterScreen.js"],"names":["NavigationContainer","StatusBar","React","useEffect","useState","getFirestore","collection","getDocs","BottomTabNav","summer","fall","winter","spring","FlatGrid","WinterScreen","navigation","name","code","color","items","setItems","styles","container","title","width","height","margin","gridView","item","itemContainer","backgroundColor","itemName","alignSelf","borderRadius","nav","navigate","button","buttonText","StyleSheet","create","flex","alignItems","justifyContent","padding","shadow","marginTop","textDecorationColor","textDecorationLine","shadowColor","shadowOffset","shadowOpacity","shadowRadius","fontSize","elevation","fontWeight","textAlign","itemCode","display","flexDirection"],"mappings":"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","sourcesContent":["import { NavigationContainer } from \"@react-navigation/native\";\nimport { StatusBar } from \"expo-status-bar\";\nimport React, { useEffect, useState } from \"react\";\nimport {\n  Button,\n  StyleSheet,\n  Text,\n  View,\n  TouchableOpacity,\n  Image,\n  Dimensions,\n  TouchableHighlight,\n} from \"react-native\";\nimport { getFirestore, collection, getDocs } from \"firebase/firestore/lite\";\nimport BottomTabNav from \"./BottomTabNav\";\nimport summer from \"../assets/summer.png\";\nimport fall from \"../assets/fall.png\";\nimport winter from \"../assets/winter.png\";\nimport spring from \"../assets/spring.png\";\nimport { FlatGrid } from \"react-native-super-grid\";\n\nexport default function WinterScreen({ navigation }) {\n  const [items, setItems] = useState([\n    { name: \"daikonradish\", code: \"#1abc9c\", color: \"#E1E7D0\" },\n    { name: \"strawberry\", code: \"#2ecc71\", color: \"#FF9293\" },\n    { name: \"apple\", code: \"#3498db\", color: \"#ED6665\" },\n    { name: \"renkon\", code: \"#9b59b6\", color: \"#5A4D41\" },\n    { name: \"cabbage\", code: \"#34495e\", color: \"#EAED\" },\n    { name: \"mikan\", code: \"#16a085\", color: \"#ED6665\" },\n  ]);\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>Winter</Text>\n\n      <Image source={summer} style={{ width: 20, height: 20, margin: 10 }} />\n      <FlatGrid\n        itemDimension={130}\n        data={items}\n        style={styles.gridView}\n        staticDimension={300}\n        fixed\n        spacing={10}\n        renderItem={({ item }) => (\n          <View style={[styles.itemContainer, { backgroundColor: \"#ecf0f1\" }]}>\n            <Text style={styles.itemName}>{item.name}</Text>\n            <View\n              style={{\n                alignSelf: \"center\",\n                width: 20,\n                height: 20,\n                borderRadius: 100 / 2,\n                backgroundColor: `${item.color}`,\n              }}\n            />\n          </View>\n        )}\n      />\n      <View style={styles.nav}>\n        <TouchableOpacity\n          onPress={() => navigation.navigate(\"Home\")}\n          style={styles.button}\n        >\n          <Text style={styles.buttonText}> HOME</Text>\n\n          <Image\n            source={summer}\n            style={{ width: 20, height: 20, margin: 10 }}\n          />\n        </TouchableOpacity>\n        <TouchableOpacity\n          onPress={() => navigation.navigate(\"Fall\")}\n          style={styles.button}\n        >\n          <Text style={styles.buttonText}> FALL</Text>\n\n          <Image\n            source={winter}\n            style={{ width: 20, height: 20, margin: 10 }}\n          />\n        </TouchableOpacity>\n        <TouchableOpacity\n          onPress={() => navigation.navigate(\"Summer\")}\n          style={styles.button}\n        >\n          <Text style={styles.buttonText}> SUMMER</Text>\n\n          <Image source={fall} style={{ width: 20, height: 20, margin: 10 }} />\n        </TouchableOpacity>\n        <TouchableOpacity\n          onPress={() => navigation.navigate(\"Spring\")}\n          style={styles.button}\n        >\n          <Text style={styles.buttonText}> SPRING</Text>\n\n          <Image\n            source={spring}\n            style={{ width: 20, height: 20, margin: 10 }}\n          />\n        </TouchableOpacity>\n      </View>\n      <StatusBar style='auto' />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#FCFBFC\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  button: {\n    color: \"#949494\",\n    width: \"40%\",\n    padding: 15,\n    borderRadius: 10,\n    alignItems: \"center\",\n    shadow: \"20px\",\n  },\n  title: {\n    marginTop: 100,\n    alignItems: \"center\",\n    textDecorationColor: \"red\",\n    textDecorationLine: \"line-through\",\n  },\n  gridView: {\n    marginTop: 10,\n    flex: 1,\n  },\n  itemContainer: {\n    justifyContent: \"flex-end\",\n    borderRadius: 5,\n    padding: 20,\n    height: 100,\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    fontSize: 10,\n    elevation: 5,\n  },\n  buttonText: {\n    color: \"#9A9A9A\",\n\n    fontSize: 10,\n  },\n  itemName: {\n    fontSize: 14,\n    color: \"#9A9A9A\",\n    fontWeight: \"100\",\n    textAlign: \"center\",\n  },\n  itemCode: {\n    fontWeight: \"600\",\n    fontSize: 12,\n    color: \"#fff\",\n  },\n  nav: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-evenly\",\n  },\n});\n"]},"metadata":{},"sourceType":"module"}