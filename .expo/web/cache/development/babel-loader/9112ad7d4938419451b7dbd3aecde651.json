{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useNavigation } from '@react-navigation/core';\nimport React, { useEffect, useState } from 'react';\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nexport default LoginScreen = function LoginScreen() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var navigation = useNavigation();\n  useEffect(function () {\n    var unsubscribe = auth.onAuthStateChanged(function (user) {\n      if (user) {\n        navigation.replace(\"Home\");\n      }\n    });\n    return unsubscribe;\n  }, []);\n  return React.createElement(KeyboardAvoidingView, {\n    style: styles.container,\n    behavior: \"padding\"\n  }, React.createElement(View, {\n    style: styles.inputContainer\n  }, React.createElement(TextInput, {\n    placeholder: \"Email\",\n    value: email,\n    onChangeText: function onChangeText(text) {\n      return setEmail(text);\n    },\n    style: styles.input\n  }), React.createElement(TextInput, {\n    placeholder: \"Password\",\n    value: password,\n    onChangeText: function onChangeText(text) {\n      return setPassword(text);\n    },\n    style: styles.input,\n    secureTextEntry: true\n  })), React.createElement(View, {\n    style: styles.buttonContainer\n  }, React.createElement(TouchableOpacity, {\n    onPress: handleLogin,\n    style: styles.button\n  }, React.createElement(Text, {\n    style: styles.buttonText\n  }, \"Login\")), React.createElement(TouchableOpacity, {\n    onPress: handleSignUp,\n    style: [styles.button, styles.buttonOutline]\n  }, React.createElement(Text, {\n    style: styles.buttonOutlineText\n  }, \"Register\"))));\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  inputContainer: {\n    width: '80%'\n  },\n  input: {\n    backgroundColor: 'white',\n    paddingHorizontal: 15,\n    paddingVertical: 10,\n    borderRadius: 10,\n    marginTop: 5\n  },\n  buttonContainer: {\n    width: '60%',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 40\n  },\n  button: {\n    backgroundColor: '#0782F9',\n    width: '100%',\n    padding: 15,\n    borderRadius: 10,\n    alignItems: 'center'\n  },\n  buttonOutline: {\n    backgroundColor: 'white',\n    marginTop: 5,\n    borderColor: '#0782F9',\n    borderWidth: 2\n  },\n  buttonText: {\n    color: 'white',\n    fontWeight: '700',\n    fontSize: 16\n  },\n  buttonOutlineText: {\n    color: '#0782F9',\n    fontWeight: '700',\n    fontSize: 16\n  }\n});","map":{"version":3,"sources":["/Users/bootcamp/Desktop/ripe/components/LoginScreen.js"],"names":["useNavigation","React","useEffect","useState","LoginScreen","email","setEmail","password","setPassword","navigation","unsubscribe","auth","onAuthStateChanged","user","replace","styles","container","inputContainer","text","input","buttonContainer","handleLogin","button","buttonText","handleSignUp","buttonOutline","buttonOutlineText","StyleSheet","create","flex","justifyContent","alignItems","width","backgroundColor","paddingHorizontal","paddingVertical","borderRadius","marginTop","padding","borderColor","borderWidth","color","fontWeight","fontSize"],"mappings":"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","sourcesContent":["\n\nimport { useNavigation } from '@react-navigation/core'\nimport React, { useEffect, useState } from 'react'\nimport { KeyboardAvoidingView, StyleSheet, Text, TextInput, TouchableOpacity, View } from 'react-native'\n// import { auth } from '../firebase'\n\nexport default LoginScreen = () => {\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n\n  const navigation = useNavigation()\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged(user => {\n      if (user) {\n        navigation.replace(\"Home\")\n      }\n    })\n\n    return unsubscribe\n  }, [])\n\n  // const handleSignUp = () => {\n  //   auth\n  //     .createUserWithEmailAndPassword(email, password)\n  //     .then(userCredentials => {\n  //       const user = userCredentials.user;\n  //       console.log('Registered with:', user.email);\n  //     })\n  //     .catch(error => alert(error.message))\n  // }\n\n  // const handleLogin = () => {\n  //   auth\n  //     .signInWithEmailAndPassword(email, password)\n  //     .then(userCredentials => {\n  //       const user = userCredentials.user;\n  //       console.log('Logged in with:', user.email);\n  //     })\n  //     .catch(error => alert(error.message))\n  // }\n\n  return (\n    <KeyboardAvoidingView\n      style={styles.container}\n      behavior=\"padding\"\n    >\n      <View style={styles.inputContainer}>\n        <TextInput\n          placeholder=\"Email\"\n          value={email}\n          onChangeText={text => setEmail(text)}\n          style={styles.input}\n        />\n        <TextInput\n          placeholder=\"Password\"\n          value={password}\n          onChangeText={text => setPassword(text)}\n          style={styles.input}\n          secureTextEntry\n        />\n      </View>\n\n      <View style={styles.buttonContainer}>\n        <TouchableOpacity\n          onPress={handleLogin}\n          style={styles.button}\n        >\n          <Text style={styles.buttonText}>Login</Text>\n        </TouchableOpacity>\n        <TouchableOpacity\n          onPress={handleSignUp}\n          style={[styles.button, styles.buttonOutline]}\n        >\n          <Text style={styles.buttonOutlineText}>Register</Text>\n        </TouchableOpacity>\n      </View>\n    </KeyboardAvoidingView>\n  )\n}\n\n\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  inputContainer: {\n    width: '80%'\n  },\n  input: {\n    backgroundColor: 'white',\n    paddingHorizontal: 15,\n    paddingVertical: 10,\n    borderRadius: 10,\n    marginTop: 5,\n  },\n  buttonContainer: {\n    width: '60%',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 40,\n  },\n  button: {\n    backgroundColor: '#0782F9',\n    width: '100%',\n    padding: 15,\n    borderRadius: 10,\n    alignItems: 'center',\n  },\n  buttonOutline: {\n    backgroundColor: 'white',\n    marginTop: 5,\n    borderColor: '#0782F9',\n    borderWidth: 2,\n  },\n  buttonText: {\n    color: 'white',\n    fontWeight: '700',\n    fontSize: 16,\n  },\n  buttonOutlineText: {\n    color: '#0782F9',\n    fontWeight: '700',\n    fontSize: 16,\n  },\n})\n\n"]},"metadata":{},"sourceType":"module"}